int x = 5;
int *p = &x;

int y = *p; // 変数からポインタを得るときには & を付け、ポインタから値を得るには * を付ける

int main()
{
    int *p = nullptr; // どの変数も参照していないポインタのことをヌルポインタと呼ぶ。C++ではヌルポインタを表すキーワードとして nullptr

    /*constポインタは、constの付ける位置で意味が変わる*/

    int x = 123;
    const int *p = &x;
    *p = 456; // エラー
    /* * の前に const を付けると、ポインタが指し示す値を書き換えることができなくなる*/

    int x = 123;
    int *const p = &x;
    p = nullptr; // エラー
    /* * の後に const を付けると、ポインタ自身を書き換えることができなくなる*/

    const int *const p = &x; // 両方とも付けることも可能

    int x = 100;
    int *p = &x; // pはポインタ型
    int &r = x;  // rは参照型

    *p = 200;
    r = 200;
    /*int& と書くと int の参照型
    ポインタが指し示す値を扱うには * を付けてデリファレンスする必要があるが、 参照では何も付与する必要がないため、見た目上では値型のように使うことが出来る。*/
}